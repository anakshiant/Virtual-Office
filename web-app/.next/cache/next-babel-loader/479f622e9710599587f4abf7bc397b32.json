{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  @import url('https://fonts.googleapis.com/css2?family=Source+Code+Pro&display=swap');\\n  @font-face {\\n    font-family: 'Source Code Pro';\\n    font-style: normal;\\n    font-weight: normal;\\n    src: local('Source Code Pro'), url('https://fonts.googleapis.com/css2?family=Source+Code+Pro&display=swap')\\n  }\\n\\n  html {\\n    background:red;\\n    height: 100%;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport App from 'next/app';\nimport { createGlobalStyle } from 'styled-components';\nvar GlobalStyle = createGlobalStyle(_templateObject());\n\nvar MyApp = /*#__PURE__*/function (_App) {\n  _inherits(MyApp, _App);\n\n  var _super = _createSuper(MyApp);\n\n  function MyApp() {\n    _classCallCheck(this, MyApp);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MyApp, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps;\n      return __jsx(React.Fragment, null, __jsx(Component, pageProps), __jsx(GlobalStyle, null));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(context) {\n      var intitialProps;\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(App.getInitialProps(context));\n\n            case 2:\n              intitialProps = _context.sent;\n              return _context.abrupt(\"return\", _objectSpread({}, intitialProps));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }]);\n\n  return MyApp;\n}(App);\n\nexport default MyApp;","map":{"version":3,"sources":["/Users/thinksyseruser/Desktop/Virtual-Office/web-app/pages/_app.tsx"],"names":["App","createGlobalStyle","GlobalStyle","MyApp","props","Component","pageProps","context","getInitialProps","intitialProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAiD,UAAjD;AACA,SAASC,iBAAT,QAAkC,mBAAlC;AAEA,IAAMC,WAAW,GAAGD,iBAAH,mBAAjB;;IAeME,K;;;;;;;;;;;;;6BAMkB;AAAA,wBACa,KAAKC,KADlB;AAAA,UACZC,SADY,eACZA,SADY;AAAA,UACDC,SADC,eACDA,SADC;AAEpB,aACE,4BACE,MAAC,SAAD,EAAeA,SAAf,CADF,EAEE,MAAC,WAAD,OAFF,CADF;AAMD;;;oCAb4BC,O;;;;;;;+CACkBP,GAAG,CAACQ,eAAJ,CAAoBD,OAApB,C;;;AAAvCE,cAAAA,a;iEACMA,a;;;;;;;;;;;;EAHIT,G;;AAiBpB,eAAeG,KAAf","sourcesContent":["import App, { AppContext, AppInitialProps } from 'next/app';\nimport { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  @import url('https://fonts.googleapis.com/css2?family=Source+Code+Pro&display=swap');\n  @font-face {\n    font-family: 'Source Code Pro';\n    font-style: normal;\n    font-weight: normal;\n    src: local('Source Code Pro'), url('https://fonts.googleapis.com/css2?family=Source+Code+Pro&display=swap')\n  }\n\n  html {\n    background:red;\n    height: 100%;\n  }\n`;\n\nclass MyApp extends App {\n  static async getInitialProps(context: AppContext) {\n    const intitialProps: AppInitialProps = await App.getInitialProps(context);\n    return { ...intitialProps };\n  }\n\n  render(): JSX.Element {\n    const { Component, pageProps } = this.props;\n    return (\n      <>\n        <Component {...pageProps} />\n        <GlobalStyle />\n      </>\n    );\n  }\n}\n\nexport default MyApp;\n"]},"metadata":{},"sourceType":"module"}